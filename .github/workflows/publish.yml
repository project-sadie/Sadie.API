name: publish

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  release:
    types:
      - published

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace }}/nuget

defaults:
  run:
    shell: pwsh

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - run: dotnet pack --configuration Release --output ${{ env.NuGetDirectory }}

      - uses: actions/upload-artifact@v4
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectory }}/*.nupkg

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.ORG_PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Bump AssemblyVersion
        run: |
          $file = Get-ChildItem -Recurse -Filter *.csproj | Select-Object -First 1
          $content = Get-Content $file.FullName
          $updated = $content -replace '<AssemblyVersion>(\d+)\.(\d+)\.(\d+)\.(\d+)</AssemblyVersion>', {
            $major = [int]$matches[1]
            $minor = [int]$matches[2]
            $build = [int]$matches[3]
            $revision = ([int]$matches[4]) + 1
            "<AssemblyVersion>$major.$minor.$build.$revision</AssemblyVersion>"
          }
          Set-Content -Path $file.FullName -Value $updated

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          $branchName = "bump-assemblyversion-$(Get-Date -Format 'yyyyMMddHHmmss')"
          git checkout -b $branchName
          git add .
          git commit -m "chore: bump AssemblyVersion [skip ci]"
          git push origin $branchName
        env:
          GH_TOKEN: ${{ secrets.ORG_PERSONAL_ACCESS_TOKEN }}

      - name: Create pull request
        run: |
          gh pr create --base main --head $branchName --title "chore: bump AssemblyVersion" --body "Automated version bump"
        env:
          GH_TOKEN: ${{ secrets.ORG_PERSONAL_ACCESS_TOKEN }}

  publish:
    needs: deploy
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Publish NuGet package
        run: |
          foreach ($file in Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg) {
            dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }

