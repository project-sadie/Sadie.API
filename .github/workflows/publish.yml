name: publish

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'
  release:
    types:
      - published

permissions:
  contents: write
  pull-requests: write

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace }}/nuget

defaults:
  run:
    shell: pwsh

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - run: dotnet pack --configuration Release --output ${{ env.NuGetDirectory }}

    - uses: actions/upload-artifact@v4
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{ env.NuGetDirectory }}/*.nupkg

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install GitHub CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y gh

    - name: Bump AssemblyVersion and create PR
      run: |
        $branchName = "bump-assemblyversion-$(Get-Date -Format 'yyyyMMddHHmmss')"
        git checkout -b $branchName

        $csproj = Get-ChildItem -Recurse -Filter *.csproj | Select-Object -First 1
        $content = Get-Content $csproj.FullName

        $pattern = '<AssemblyVersion>(\d+)\.(\d+)\.(\d+)\.(\d+)</AssemblyVersion>'
        $newContent = $content -replace $pattern, {
            $major = [int]$matches[1]
            $minor = [int]$matches[2]
            $patch = [int]$matches[3] + 1
            $revision = [int]$matches[4]
            "<AssemblyVersion>$major.$minor.$patch.$revision</AssemblyVersion>"
        }

        $newContent | Set-Content $csproj.FullName

        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add $csproj.FullName
        git commit -m "chore: bump AssemblyVersion [skip ci]"
        git push origin $branchName

        gh pr create --title "chore: bump AssemblyVersion" --body "Auto version bump" --base main --head $branchName

        Start-Sleep -Seconds 10

        $prNumber = gh pr list --head $branchName --json number --jq '.[0].number'

        gh pr merge $prNumber --squash --admin --delete-branch
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/download-artifact@v4
      with:
        name: nuget
        path: ${{ env.NuGetDirectory }}

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Publish NuGet package
      run: |
        foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
            dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
        }

