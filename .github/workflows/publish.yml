name: publish

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'
  release:
    types:
      - published

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace }}/nuget

defaults:
  run:
    shell: pwsh

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - run: dotnet pack --configuration Release --output ${{ env.NuGetDirectory }}

      - uses: actions/upload-artifact@v4
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectory }}/*.nupkg

  version-bump:
    needs: package
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Setup Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Bump <Version> in .csproj
        run: |
          $csproj = Get-ChildItem -Recurse -Filter *.csproj | Select-Object -First 1
          [xml]$xml = Get-Content $csproj.FullName
          $versionNode = $xml.Project.PropertyGroup.Version
          $oldVersion = $versionNode.'#text'
          Write-Host "Current version: $oldVersion"

          $parts = $oldVersion -split '\.'
          $parts[2] = ([int]$parts[2]) + 1
          $newVersion = "$($parts[0]).$($parts[1]).$($parts[2])"
          Write-Host "New version: $newVersion"

          $versionNode.'#text' = $newVersion
          $xml.Save($csproj.FullName)

          git checkout -b develop
          git add $csproj
          git commit -m "chore: bump version to $newVersion [skip ci]"
          git push https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }} develop --force
          echo "NEW_VERSION=$newVersion" >> $env:GITHUB_ENV

      - name: Create PR develop → main
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          gh pr create \
            --title "chore: bump version to $env:NEW_VERSION" \
            --body "Automated version bump after merge to main.\n\nVersion diff: previous → $env:NEW_VERSION" \
            --base main \
            --head develop

  publish:
    needs: version-bump
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Publish NuGet package
        run: |
          foreach ($file in Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg) {
            dotnet nuget push $file `
              --api-key "${{ secrets.NUGET_APIKEY }}" `
              --source https://api.nuget.org/v3/index.json `
              --skip-duplicate
          }

